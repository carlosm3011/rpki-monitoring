---
# ROLE rpki_monitoring
#
# 

- name: Comienzo instalar RPKI Monitoring
  shell: | 
     echo INSTALAR RPKI MONITORING
     logger BEGIN: instalar rpki monitoring
  args:
    executable: /bin/sh

- name: Import InfluxDB GPG signing key
  apt_key: url=https://repos.influxdata.com/influxdb.key state=present

- name: Add InfluxDB repository
  apt_repository: repo='deb https://repos.influxdata.com/ubuntu trusty stable' state=present

- name: Instalar paquetes auxiliares (tree, jq)
  apt: 
    pkg: 
      - tree
      - jq
      - figlet
    update_cache: no

- name: Install Telegraf
  apt: name=telegraf state=present

- name: Install InfluxDB packages
  apt: name=influxdb state=present

- name: Install Grafana
  shell: |
    cd /tmp
     sudo apt-get install -y adduser libfontconfig1
     wget https://dl.grafana.com/enterprise/release/grafana-enterprise_8.1.5_amd64.deb
     sudo dpkg -i grafana-enterprise_8.1.5_amd64.deb
  args:
    executable: /bin/sh

- name: Modify InfluxDB hostname
  replace:
    dest=/etc/influxdb/influxdb.conf
    regexp='hostname = "localhost"'
    replace='hostname = "{{ ansible_hostname }}"'
    backup=yes

- name: Crear directorios para rpki monitoring
  file:
    path: '{{ item.dst }}'
    owner: '{{ item.o }}'
    group: '{{ item.g }}'
    state: directory
    mode: '{{ item.mode }}'
  loop:
    - { dst: /opt/rpkimon, mode: '0755', o: 'sadmin', g: 'sadmin' }
    - { dst: /opt/rpkimon/tals, mode: '0755', o: 'sadmin', g: 'sadmin' }
    - { dst: /opt/rpkimon/tals/lacnic, mode: '0755', o: 'sadmin', g: 'sadmin' }
    - { dst: /opt/rpkimon/tals/apnic, mode: '0755', o: 'sadmin', g: 'sadmin' }
    - { dst: /opt/rpkimon/tals/afrinic, mode: '0755', o: 'sadmin', g: 'sadmin' }
    - { dst: /opt/rpkimon/fort, mode: '0755', o: 'sadmin', g: 'sadmin' }
    - { dst: /opt/rpkimon/octorpki, mode: '0755', o: 'sadmin', g: 'sadmin' }
    - { dst: /opt/rpkimon/rpki-client, mode: '0755', o: 'sadmin', g: 'sadmin' }
    - { dst: /opt/rpkimon/routinator, mode: '0755', o: 'sadmin', g: 'sadmin' }
    - { dst: /var/lib/grafana/dashboards, mode: '0755', o: 'root', g: 'root' }

- name: Copia scripts de lanzamiento y de colecci√≥n de datos de los diferentes validadores
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dst }}'
    owner: '{{ item.o }}'
    group: '{{ item.g }}'
    mode: '{{ item.mode }}'
  loop:
    - { src: files/telegraf.sudo, dst: /etc/sudoers.d/telegraf, mode: '0660', o: 'root', g: 'root' }
    - { src: files/dashboardFileProvisioner.yml, dst: /etc/grafana/provisioning/dashboards, mode: '0644', o: 'root', g: 'root' }
    - { src: files/influxdbv1Provisioner.yml, dst: /etc/grafana/provisioning/datasources, mode: '0644', o: 'root', g: 'root' }
    - { src: files/rpki-stats-v1.json, dst: /var/lib/grafana/dashboards, mode: '0644', o: 'root', g: 'root' }
    - { src: files/telegraf.rpki_stats.conf, dst: /etc/telegraf/telegraf.d/rpki_stats.conf, mode: '0644', o: 'sadmin', g: 'sadmin' }
    - { src: files/lacnic.tal, dst: /opt/rpkimon/tals, mode: '0664', o: 'sadmin', g: 'sadmin' }
    - { src: files/lacnic.tal, dst: /opt/rpkimon/tals/lacnic, mode: '0664', o: 'sadmin', g: 'sadmin' }
    - { src: files/apnic.tal, dst: /opt/rpkimon/tals/apnic, mode: '0664', o: 'sadmin', g: 'sadmin' }
    - { src: files/afrinic.tal, dst: /opt/rpkimon/tals/afrinic, mode: '0664', o: 'sadmin', g: 'sadmin' }
    - { src: files/fort.launch.sh, dst: /opt/rpkimon/fort, mode: '0755', o: 'sadmin', g: 'sadmin' }
    - { src: files/fort.collect.sh, dst: /opt/rpkimon/fort, mode: '0755', o: 'sadmin', g: 'sadmin' }
    - { src: files/routinator.launch.sh, dst: /opt/rpkimon/routinator, mode: '0755', o: 'sadmin', g: 'sadmin' }
    - { src: files/routinator.collect.sh, dst: /opt/rpkimon/routinator, mode: '0755', o: 'sadmin', g: 'sadmin' }
    - { src: files/rpki-client.launch.sh, dst: /opt/rpkimon/rpki-client, mode: '0755', o: 'sadmin', g: 'sadmin' }
    - { src: files/rpki-client.collect.sh, dst: /opt/rpkimon/rpki-client, mode: '0755', o: 'sadmin', g: 'sadmin' }


    # - { src: files/named.slaves.conf, dst: /home/bind9/etc/ }
    # - { src: files/named.masters.conf, dst: /home/bind9/etc/ }
    # - { src: files/named.logging.conf, dst: /home/bind9/etc/ }
    # - { src: files/db.pande.mia, dst: /home/bind9/var/zones }

- name: Reinicio el telegraf
  service:
     name: telegraf
     state: restarted

- name: Reinicio el InfluxDB
  service:
     name: influxdb
     state: restarted

- name: Reinicio el Grafana
  service:
     name: grafana-server
     state: restarted

- name: Lanzo los containers de los validadores
  shell: | 
     cd /opt/rpkimon
     logger Lanzando los containers
     ./fort/fort.launch.sh
     ./routinator/routinator.launch.sh
     ./rpki-client/rpki-client.launch.sh
     touch /var/local/containers_launched
  args:
    executable: /bin/sh
    creates: /var/local/containers_launched

# - name: Instalar dependencias para el server
#   apt: 
#     pkg: 
#       - sudo
#       - vim-tiny
#       - figlet
#     update_cache: yes

# # Los usuarios a crear se definen en la variable usuarios
# - name: Crear usuarios (carlos, sadmin, etc.)
#   user: 
#     name: "{{ item }}"
#     state: present
#     shell: /bin/bash
#     home: "/home/{{ item }}"
#     append: yes
#     groups: sudo
#   loop: '{{ usuarios }}'

# # Una clave por usuario, hay que llamarlas id.pub.<<usuario>>'
# - name: Copia las claves publicas al servidor remoto
#   copy:
#     src: "id.pub.{{ item }}"
#     dest: /var/run
#   loop: '{{ usuarios }}'
  
# - name: Configurar las claves publicas de los usuarios
#   authorized_key:
#     user: "{{ item }}"
#     state: present
#     # key: "{{ lookup('file', '/var/run/id.pub.'+item) }}"
#     key: "{{ lookup('file', 'id.pub.'+item) }}"
#   loop: '{{ usuarios }}'

# - name: Deshabilito UFW
#   ufw:
#     state: disabled

# - name: Levanto el fail2ban corriendo
#   service:
#      name: fail2ban
#      state: started
